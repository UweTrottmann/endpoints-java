/*
 * Copyright 2016 Google Inc. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

plugins {
  id("endpoints-java.java-conventions")
  id("endpoints-java.publish-conventions")
}

// Set project-specific publishing properties
publishing {
  publications {
    mavenJava(MavenPublication) {
      artifactId = "endpoints-framework"
      from components.java
      pom {
        name.set("Endpoints Framework")
        description.set("A framework for building RESTful web APIs.")
      }
    }
  }
}

configurations {
  include
  compile.extendsFrom include
}

jar {
  from {
    configurations.include.collect { it.isDirectory() ? it : zipTree(it) }
  }
}

def annotations = [
    "AnnotationBoolean.java",
    "Api.java",
    "ApiAuth.java",
    "ApiCacheControl.java",
    "ApiClass.java",
    "ApiFrontendLimitRule.java",
    "ApiFrontendLimits.java",
    "ApiIssuer.java",
    "ApiIssuerAudience.java",
    "ApiMethod.java",
    "ApiMethodCacheControl.java",
    "ApiNamespace.java",
    "ApiReference.java",
    "ApiResourceProperty.java",
    "ApiTransformer.java",
    "Authenticator.java",
    "DefaultValue.java",
    "PeerAuthenticator.java",
    "AuthLevel.java",
    "Transformer.java",
]

def apiTypes = [
    "DataAndTime.java",
    "SimpleData.java",
]

// Generates a Javadoc for types meant to be used by API producers
task siteJavadoc(type: Javadoc) {
  source = annotations.collect({ "src/main/java/com/google/api/server/spi/config/${it}" }) +
      apiTypes.collect({ "src/main/java/com/google/api/server/spi/types" })
  destinationDir = file("${project.docsDir}/site-docs")
}

task copyTestResources(type: Copy) {
  from "${projectDir}/src/test/resources"
  into "${buildDir}/classes/test"
}
processTestResources.dependsOn copyTestResources

dependencies {
  // TODO change to api and version v1-rev20200806-2.0.0.
  compile 'com.google.apis:google-api-services-discovery:v1-rev20200806-2.0.0'
  compile group: 'com.google.guava', name: 'guava', version: guavaVersion
  compile group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: jacksonVersion
  compile group: 'com.google.appengine', name: 'appengine-api-1.0-sdk', version: appengineVersion
  compile group: 'com.google.flogger', name: 'flogger', version: floggerVersion
  runtime group: 'com.google.flogger', name: 'flogger-system-backend', version: floggerVersion
  compile(group: 'com.google.http-client', name: 'google-http-client-jackson2', version: httpclientVersion) {
    exclude group: 'com.fasterxml.jackson.core', module: 'jackson-core'
  }
  compile(group: 'com.google.api-client', name: 'google-api-client', version: apiclientVersion)
  compile(group: 'com.google.api-client', name: 'google-api-client-appengine', version: apiclientVersion)
  compile group: 'com.google.code.findbugs', name: 'jsr305', version: findbugsVersion
  compile group: 'commons-fileupload', name: 'commons-fileupload', version: fileUploadVersion
  compile group: 'io.swagger', name: 'swagger-models', version: swaggerVersion
  compile group: 'io.swagger', name: 'swagger-core', version: swaggerVersion
  compile group: 'org.slf4j', name: 'slf4j-nop', version: slf4jVersion

  compileOnly group: 'javax.servlet', name: 'servlet-api', version: servletVersion
  compileOnly "com.google.auto.value:auto-value:1.2"
  annotationProcessor "com.google.auto.value:auto-value:1.2"

  testCompile project(':test-utils')
  testCompile group: 'junit', name: 'junit', version: junitVersion
  testCompile group: 'org.mockito', name: 'mockito-core', version: mockitoVersion
  testCompile group: 'com.google.truth', name: 'truth', version: truthVersion
  testCompile group: 'com.google.appengine', name: 'appengine-testing', version: appengineVersion
  testCompile group: 'com.google.appengine', name: 'appengine-api-stubs', version: appengineVersion
  testCompile group: 'org.springframework', name: 'spring-test', version: springtestVersion
  testCompile group: 'com.google.guava', name: 'guava-testlib', version: guavaVersion
}

